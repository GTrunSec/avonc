diff --git a/appinfo/info.xml b/appinfo/info.xml
index 0ec73f27..33602364 100644
--- a/appinfo/info.xml
+++ b/appinfo/info.xml
@@ -27,9 +27,6 @@
 	<dependencies>
 		<nextcloud min-version="15" max-version="17" />
 	</dependencies>
-	<background-jobs>
-		<job>OCA\Richdocuments\Backgroundjobs\ObtainCapabilities</job>
-	</background-jobs>
 	<repair-steps>
 		<post-migration>
 			<step>OCA\Richdocuments\Migration\UpdateEmptyTemplates</step>
diff --git a/lib/Capabilities.php b/lib/Capabilities.php
index 887da225..6ac198e2 100644
--- a/lib/Capabilities.php
+++ b/lib/Capabilities.php
@@ -98,35 +98,15 @@ class Capabilities implements ICapability {
 	}
 
 	public function getCapabilities() {
-		$collaboraCapabilities = $this->getCollaboraCapabilities();
 		return [
 			'richdocuments' => [
 				'mimetypes' => self::MIMETYPES,
 				'mimetypesNoDefaultOpen' => self::MIMETYPES_OPTIONAL,
-				'collabora' => $collaboraCapabilities,
-				'direct_editing' => isset($collaboraCapabilities['hasMobileSupport']) ? : false,
-				'templates' => isset($collaboraCapabilities['hasTemplateSaveAs']) ? : false,
-				'productName' => isset($collaboraCapabilities['productName']) ? $collaboraCapabilities['productName'] : $this->l10n->t('Collabora Online'),
+				'collabora' => [],
+				'direct_editing' => false,
+				'templates' => false,
+				'productName' => 'LibreOffice Online',
 			],
 		];
 	}
-
-	/**
-	 * @return array
-	 * @throws \OCP\Files\NotPermittedException
-	 */
-	private function getCollaboraCapabilities() {
-		try {
-			$file = $this->appData->getFile('capabilities.json');
-			$decodedFile = \json_decode($file->getContent(), true);
-		} catch (NotFoundException $e) {
-			return [];
-		}
-
-		if (!is_array($decodedFile)) {
-			return [];
-		}
-
-		return $decodedFile;
-	}
 }
diff --git a/lib/Controller/DocumentController.php b/lib/Controller/DocumentController.php
index 7d56c64c..bd9fe502 100644
--- a/lib/Controller/DocumentController.php
+++ b/lib/Controller/DocumentController.php
@@ -14,7 +14,6 @@ namespace OCA\Richdocuments\Controller;
 use OCA\Richdocuments\Db\WopiMapper;
 use OCA\Richdocuments\Service\FederationService;
 use OCA\Richdocuments\TokenManager;
-use OCA\Richdocuments\WOPI\Parser;
 use \OCP\AppFramework\Controller;
 use OCP\AppFramework\Http;
 use OCP\AppFramework\Http\JSONResponse;
diff --git a/lib/Controller/SettingsController.php b/lib/Controller/SettingsController.php
index 2aeab1b4..9f72bc0c 100644
--- a/lib/Controller/SettingsController.php
+++ b/lib/Controller/SettingsController.php
@@ -11,9 +11,6 @@
 
 namespace OCA\Richdocuments\Controller;
 
-use OCA\Richdocuments\Service\CapabilitiesService;
-use OCA\Richdocuments\WOPI\DiscoveryManager;
-use OCA\Richdocuments\WOPI\Parser;
 use \OCP\AppFramework\Controller;
 use OCP\AppFramework\Http;
 use OCP\AppFramework\Http\DataResponse;
@@ -31,14 +28,8 @@ class SettingsController extends Controller{
 	private $appConfig;
 	/** @var IConfig */
 	private $config;
-	/** @var DiscoveryManager  */
-	private $discoveryManager;
-	/** @var Parser */
-	private $wopiParser;
 	/** @var string */
 	private $userId;
-	/** @var CapabilitiesService */
-	private $capabilitiesService;
 
 	/**
 	 * @param string $appName
@@ -46,28 +37,19 @@ class SettingsController extends Controller{
 	 * @param IL10N $l10n
 	 * @param AppConfig $appConfig
 	 * @param IConfig $config
-	 * @param DiscoveryManager $discoveryManager
-	 * @param Parser $wopiParser
 	 * @param string $userId
-	 * @param CapabilitiesService $capabilitiesService
 	 */
 	public function __construct($appName,
 								IRequest $request,
 								IL10N $l10n,
 								AppConfig $appConfig,
 								IConfig $config,
-								DiscoveryManager $discoveryManager,
-								Parser $wopiParser,
-								$userId,
-								CapabilitiesService $capabilitiesService) {
+								$userId) {
 		parent::__construct($appName, $request);
 		$this->l10n = $l10n;
 		$this->appConfig = $appConfig;
 		$this->config = $config;
-		$this->discoveryManager = $discoveryManager;
-		$this->wopiParser = $wopiParser;
 		$this->userId = $userId;
-		$this->capabilitiesService = $capabilitiesService;
 	}
 
 	/**
@@ -76,15 +58,6 @@ class SettingsController extends Controller{
 	 * @throws \Exception
 	 */
 	public function checkSettings() {
-		try {
-			$response = $this->discoveryManager->fetchFromRemote();
-		} catch (\Exception $e) {
-			return new DataResponse([
-				'status' => $e->getCode(),
-				'message' => $e->getMessage()
-			], Http::STATUS_INTERNAL_SERVER_ERROR);
-		}
-
 		return new DataResponse();
 	}
 
@@ -154,26 +127,6 @@ class SettingsController extends Controller{
 			$this->appConfig->setAppValue('canonical_webroot', $canonical_webroot);
 		}
 
-		$this->discoveryManager->refretch();
-		try {
-			$capaUrlSrc = $this->wopiParser->getUrlSrc('Capabilities');
-			if (is_array($capaUrlSrc) && $capaUrlSrc['action'] === 'getinfo') {
-				$public_wopi_url = str_replace('/hosting/capabilities', '', $capaUrlSrc['urlsrc']);
-				if ($public_wopi_url !== null) {
-					$this->appConfig->setAppValue('public_wopi_url', $public_wopi_url);
-					$colon = strpos($public_wopi_url, ':', 0);
-					if ($this->request->getServerProtocol() !== substr($public_wopi_url, 0, $colon)){
-						$message = $this->l10n->t('Saved with error: Collabora Online should use the same protocol as the server installation.');
-					}
-				}
-			}
-		} catch (\Exception $e){
-			// Ignore
-		}
-
-		$this->capabilitiesService->clear();
-		$this->capabilitiesService->refretch();
-
 		$response = [
 			'status' => 'success',
 			'data' => ['message' => $message]
diff --git a/lib/TokenManager.php b/lib/TokenManager.php
index 8eba0b0f..dda9e9fc 100644
--- a/lib/TokenManager.php
+++ b/lib/TokenManager.php
@@ -25,7 +25,6 @@ use OC\Share\Constants;
 use OCA\Richdocuments\Db\WopiMapper;
 use OCA\Richdocuments\Helper;
 use OCA\Richdocuments\Db\Wopi;
-use OCA\Richdocuments\WOPI\Parser;
 use OCP\Files\File;
 use OCP\Files\IRootFolder;
 use OCP\Files\Node;
@@ -44,8 +43,6 @@ class TokenManager {
 	private $shareManager;
 	/** @var IURLGenerator */
 	private $urlGenerator;
-	/** @var Parser */
-	private $wopiParser;
 	/** @var AppConfig */
 	private $appConfig;
 	/** @var string */
@@ -59,11 +56,12 @@ class TokenManager {
 	/** @var IGroupManager */
 	private $groupManager;
 
+	const LOOL_MIME_TYPES = @LOOL_MIME_TYPES_ARRAY@;
+
 	/**
 	 * @param IRootFolder $rootFolder
 	 * @param IManager $shareManager
 	 * @param IURLGenerator $urlGenerator
-	 * @param Parser $wopiParser
 	 * @param AppConfig $appConfig
 	 * @param string $UserId
 	 * @param WopiMapper $wopiMapper
@@ -72,7 +70,6 @@ class TokenManager {
 	public function __construct(IRootFolder $rootFolder,
 								IManager $shareManager,
 								IURLGenerator $urlGenerator,
-								Parser $wopiParser,
 								AppConfig $appConfig,
 								$UserId,
 								WopiMapper $wopiMapper,
@@ -82,7 +79,6 @@ class TokenManager {
 		$this->rootFolder = $rootFolder;
 		$this->shareManager = $shareManager;
 		$this->urlGenerator = $urlGenerator;
-		$this->wopiParser = $wopiParser;
 		$this->appConfig = $appConfig;
 		$this->trans = $trans;
 		$this->userId = $UserId;
@@ -177,16 +173,10 @@ class TokenManager {
 
 		$wopi = $this->wopiMapper->generateFileToken($fileId, $owneruid, $editoruid, $version, (int)$updatable, $serverHost, $guest_name, 0, $hideDownload, $direct, $isRemoteToken);
 
-		try {
-
-			return [
-				$this->wopiParser->getUrlSrc($file->getMimeType())['urlsrc'],
-				$wopi->getToken(),
-				$wopi
-			];
-		} catch (\Exception $e){
-			throw $e;
-		}
+		if (in_array($file->getMimeType(), self::LOOL_MIME_TYPES))
+			return ['@LOOL_LEAFLET_URL@', $wopi->getToken(), $wopi];
+		else
+			throw new \Exception('Could not find urlsrc in WOPI');
 	}
 
 	public function updateToRemoteToken(Wopi $wopi, $shareToken, $remoteServer, $remoteServerToken, $remoteWopi) {
@@ -225,10 +215,10 @@ class TokenManager {
 
 		$wopi = $this->wopiMapper->generateFileToken($file->getId(), $owneruid, $editoruid, 0, (int)$updatable, $serverHost, null, $templateDestination, $direct);
 
-		return [
-			$this->wopiParser->getUrlSrc($file->getMimeType())['urlsrc'],
-			$wopi->getToken(),
-		];
+		if (in_array($file->getMimeType(), self::LOOL_MIME_TYPES))
+			return ['@LOOL_LEAFLET_URL@', $wopi->getToken()];
+		else
+			throw new \Exception('Could not find urlsrc in WOPI');
 	}
 
 	/**
